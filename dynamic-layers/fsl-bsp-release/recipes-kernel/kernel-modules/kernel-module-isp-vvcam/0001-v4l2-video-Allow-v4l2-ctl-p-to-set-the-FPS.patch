From 65ddee3f837cb3a2d3ae6454be76d0387bf40f13 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20Riedm=C3=BCller?= <s.riedmueller@phytec.de>
Date: Wed, 20 Sep 2023 11:29:59 +0200
Subject: [PATCH 1/2] v4l2: video: Allow v4l2-ctl -p to set the FPS
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

v4l2-ctl -p sets the FPS always with a 1/1000 fraction, which does not
work with the current implementation, as it only uses the denominator to
check and set the FPS. Fix this by calculating the FPS from numerator
and denominator instead of only using the denominator.

Signed-off-by: Stefan Riedm√ºller <s.riedmueller@phytec.de>
---
 vvcam/v4l2/video/video.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/vvcam/v4l2/video/video.c b/vvcam/v4l2/video/video.c
index e84217fac61e..3497b3a973a2 100644
--- a/vvcam/v4l2/video/video.c
+++ b/vvcam/v4l2/video/video.c
@@ -1427,11 +1427,10 @@ static int vidioc_s_parm(struct file *file, void *fh,
 	struct viv_video_device *vdev = handle->vdev;
 	struct v4l2_event event;
 	struct viv_video_event *v_event;
+	u32 fps;
 
 	if (a->type != V4L2_BUF_TYPE_VIDEO_CAPTURE)
 		return -EINVAL;
-	if (a->parm.output.timeperframe.denominator > handle->vdev->camera_mode.fps)
-		return -EINVAL;
 
 	if (vdev->ctrls.buf_va == NULL)
 		return -EINVAL;
@@ -1442,9 +1441,14 @@ static int vidioc_s_parm(struct file *file, void *fh,
 		a->parm.capture.capability = V4L2_CAP_TIMEPERFRAME;
 		a->parm.capture.timeperframe = handle->vdev->timeperframe;
 	}
-	handle->vdev->timeperframe = a->parm.output.timeperframe;
+
+	fps = a->parm.capture.timeperframe.denominator / a->parm.capture.timeperframe.numerator;
+	if (fps > vdev->camera_mode.fps)
+		return -EINVAL;
+
+	handle->vdev->timeperframe = a->parm.capture.timeperframe;
 	mutex_lock(&vdev->event_lock);
-	sprintf(vdev->ctrls.buf_va,"{<id>:<s.fps>;<fps>:%d}",handle->vdev->timeperframe.denominator);
+	sprintf(vdev->ctrls.buf_va,"{<id>:<s.fps>;<fps>:%u}", fps);
 	v_event = (struct viv_video_event *)&event.u.data[0];
 	v_event->stream_id = 0;
 	v_event->file = &handle->vfh;
-- 
2.25.1

